#!/usr/bin/env python
import getopt, sys, imaplib, re, time


def usage():
    sys.stderr.write("usage:\n")
    sys.stderr.write("  -h|--help: show help\n")
    sys.stderr.write("  -m|--mbox: set mbox\n")
    sys.stderr.write("  -u|--user: set user name\n")
    sys.stderr.write("  -w|--passwd: set password\n")
    sys.stderr.write("  -s|--server: set server\n")
    sys.stderr.write("  -p|--port: set port\n")
    sys.stderr.write("  -S|--ssl: use ssl\n")
    sys.stderr.write("  -v|--verbose: verbose mode\n")

def imap(user, passwd, mbox, server, port, ssl, verbose):
    ret = False
    count = 0
    obj = 0
    res = ''
    content = ''
    messages = 0
    recent = 0
    uidnext = 0
    uidvalidity = 0
    unseen = 0
    try:
        if ssl == 'yes' :
            obj = imaplib.IMAP4_SSL(server,port)
        else:
            obj = imaplib.IMAP4(server,port)        
        obj.login(user,passwd)
        obj.select()
        content = obj.status(mbox, "(MESSAGES RECENT UIDNEXT UIDVALIDITY UNSEEN)")
        res = content[1][0]
        status = content[0]
        if status == 'OK':
            messages = re.search("MESSAGES (\d+)", res).group(1)
            recent = re.search("RECENT (\d+)", res).group(1)
            uidnext = re.search("UIDNEXT (\d+)", res).group(1)
            uidvalidity = re.search("UIDVALIDITY (\d+)", res).group(1)
            unseen = re.search("UNSEEN (\d+)", res).group(1)
            ret = True
    except Exception as err:
        ret = False
        if verbose:
            sys.stderr.write(str(err) + "\n")
    
    return ret,messages,recent,uidnext,uidvalidity,unseen

def main():
    verbose = False
    mbox    = ""
    user    = ""
    passwd  = ""
    server  = ""
    port    = ""
    ssl     = "no"

    sys.stdin.readline()
    
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hm:u:w:s:p:S:v",
                                   ["help",
                                    "mbox=",
                                    "user=",
                                    "passwd=",
                                    "server=",
                                    "port=",
                                    "ssl="
                                    "verbose"])
    except getopt.GetoptError as err:
        # print help information and exit:
        sys.stderr.write(str(err) + "\n") # will print something like "option -a not recognized"
        usage()
        sys.exit(2)
    for o, v in opts:
        if o in ("-v", "--verbose"):
            verbose = True
        elif o in ("-h", "--help"):
            usage()
            sys.exit(1)
        elif o in ("-m", "--mbox"):
            mbox = v
        elif o in ("-u", "--user"):
            user = v
        elif o in ("-w", "--passwd"):
            passwd = v
        elif o in ("-s", "--server"):
            server = v
        elif o in ("-p", "--port"):
            port = v
        elif o in ("-S", "--ssl"):
            ssl = v
        else:
            usage()
            sys.exit(1)

    if mbox == "" or user == "" or ssl == "" \
       or passwd == "" or server == "" or  port == "":
        usage()
        sys.exit(1)

    ret,messages,recent,uidnext,uidvalidity,unseen = imap(user, passwd, mbox, server, port, ssl, verbose)
    if ret:
        print messages,recent,uidnext,uidvalidity,unseen
        sys.exit(0)
    else:
        sys.exit(1)
        
main()
